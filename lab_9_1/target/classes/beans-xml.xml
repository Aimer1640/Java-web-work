<?xml version="1.0" encoding="UTF-8"?>
    <!-- 引入命名空间及schema路径-->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
 	       http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
 	       http://www.springframework.org/schema/context/spring-context.xsd
 	       http://www.springframework.org/schema/aop
 	       http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx
 	       http://www.springframework.org/schema/tx/spring-tx.xsd">
        
     <!-- 0加载properties文件 -->
	<context:property-placeholder location="c3p0-db.properties"></context:property-placeholder>
    <!-- 2040706101 杨艾琳 -->
	<!-- 1 配置数据源，读取properties文件信息 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
	</bean>

	<!-- 2 配置jdbc模板 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 3配置dao -->
	<bean id="classDao" class="com.example.dao.impl.ClassDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate"></property>
	</bean>

	<!-- 4配置service -->
	<bean id="classService" class="com.example.service.impl.ClassServiceImpl">
		<property name="classDao" ref="classDao"></property>
	</bean>
	<!-- 2040706101 杨艾琳 -->
	<!-- ★★★★★ xml事务配置 （重点） -->
	<!-- #1 事务管理器，依赖于数据源 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- #2 编写通知：对事务进行增强(通知),需要编写对切入点和具体执行事务细节 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" read-only="false" isolation="REPEATABLE_READ" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	<!-- #3 aop 编写，让spring自动对目标生成代理，需要使用AspectJ的表达式 -->
	<aop:config>
		<!-- #3.1 切入点 -->
		<aop:pointcut id="txPut" expression="execution(* com.example.service.*.*(..))"/>
		<!-- #3.1 切面：将切入点与通知整合 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPut"></aop:advisor>
    </aop:config>
</beans>
